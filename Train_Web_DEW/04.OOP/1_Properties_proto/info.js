console.log(1);

//!   Два кита ООП:
//   НАСЛЕДОВАНИЕ -
//   АБСТРАГИРОВАНИЕ -

//! Абстрагирование :
//  - построение модели сущности
// - определение свойств(методов)

// user (username, password, email)
// user (login(), logout(), ...) - методы(свойства)

//! Наследование
// user -  курсы
// user.getCourses - позволяет получить список курсов
// user.rate -
// user.role - админ, студент, модератор
//   выедлить минимальный набор для пользователя:
// - user(login(), logout() , -(username, password, email))

let user = {
  username: "",
  password: "",
  email: "",
  role: "",
  // методы
  // сбросить праоль
  // getCourses(
      if(admin) ...
      if(studen) ...
      if(quest) ...
  )
};

//? наследование - расширение

//! admin - это расширение user

admin (user) {
    // changeUserStatus()
    //changeUserCourses()
    // перезаписать метод getCourses() { получить все курсы } 
}

student (user) {
    // rate
    // перезаписать метод getCourses() { получить курсы конкретного студента}
}



//!  ПОЛИМОРФИЗМ  - это применение в данном констексте свойтв и методов, но для каждой сущности внутри мы изменяем данные методы под каждую сущность;  один и тот же метод меняется у разных сущностей ; 



//!  Инкапсуляция - скрытие каких-то реализация   (нет прямого доступа к данным);

course {
    title:'',
    url:'',
    price: 20.00$, // private, protected ... 
    getPrice: {}
}


course.price
cource.getPrice()  // 18$